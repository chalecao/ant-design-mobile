{
    "name": "preact-h5-ui",
    "version": "1.0.0",
    "description": "preact mobile component optimized from mobile ant design",
    "homepage": "http://mobile.ant.design",
    "keywords": [
        "preact",
        "preact-component",
        "ant",
        "design",
        "component",
        "components",
        "ui",
        "framework",
        "frontend",
        "mobile"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/chalecao/preact-h5-ui"
    },
    "bugs": {
        "url": "https://github.com/chalecao/preact-h5-ui/issues"
    },
    "files": [
        "dist",
        "lib",
        "es"
    ],
    "license": "MIT",
    "main": "lib/index.js",
    "jsnext:main": "es/index.js",
    "module": "es/index.js",
    "dependencies": {
        "@types/classnames": "^2.2.4",
        "@types/react": "^16.4.2",
        "@types/react-dom": "^16.0.6",
        "@types/react-native": "^0.55.25",
        "array-tree-filter": "~2.1.0",
        "babel-runtime": "6.x",
        "classnames": "^2.2.1",
        "normalize.css": "^7.0.0",
        "prop-types": "^15.6.2",
        "rc-checkbox": "~2.0.0",
        "rc-collapse": "~1.9.1",
        "rc-slider": "~8.2.0",
        "rc-swipeout": "~2.0.0",
        "react-native-camera-roll-picker": "^1.2.1",
        "react-native-collapsible": "^0.9.0",
        "react-native-drawer-layout": "~1.3.0",
        "react-native-menu": "^0.23.0",
        "rmc-calendar": "^1.0.0",
        "rmc-cascader": "~5.0.0",
        "rmc-date-picker": "^6.0.8",
        "rmc-dialog": "^1.0.1",
        "rmc-drawer": "^0.4.11",
        "rmc-feedback": "^2.0.0",
        "rmc-input-number": "^1.0.0",
        "rmc-list-view": "^0.11.0",
        "rmc-notification": "~1.0.0",
        "rmc-nuka-carousel": "~3.0.0",
        "rmc-picker": "~5.0.0",
        "rmc-pull-to-refresh": "~1.0.1",
        "rmc-steps": "~1.0.0",
        "rmc-tabs": "~1.2.0",
        "rmc-tooltip": "~1.0.0",
        "rn-topview": "^0.1.6"
    },
    "devDependencies": {
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-external-helpers": "^6.22.0",
        "babel-plugin-import": "^1.6.2",
        "babel-plugin-transform-react-jsx": "^6.24.1",
        "babel-plugin-transform-runtime": "^6.23.0",
        "babel-preset-env": "^1.6.1",
        "babel-preset-es2015": "^6.0.0",
        "babel-preset-react": "^6.0.0",
        "babel-preset-stage-3": "^6.0.0",
        "babel-runtime": "^6.26.0",
        "eslint": "~4.3.0",
        "eslint-config-airbnb": "~15.1.0",
        "eslint-plugin-babel": "~4.1.1",
        "eslint-plugin-import": "~2.7.0",
        "eslint-plugin-jsx-a11y": "~6.0.2",
        "eslint-plugin-markdown": "~1.0.0-beta.6",
        "eslint-plugin-react": "~7.2.0",
        "eslint-tinker": "~0.4.1",
        "gulp": "^3.9.1",
        "gulp-babel": "^7.0.1",
        "gulp-rollup": "^2.16.2",
        "gulp-rollup-each": "^2.1.0",
        "gulp-typescript": "^5.0.0-alpha.2",
        "preact": "^8.2.6",
        "preact-compat": "^3.17.0",
        "rollup": "^0.59.4",
        "rollup-plugin-alias": "^1.4.0",
        "rollup-plugin-babel": "^3.0.3",
        "rollup-plugin-buble": "^0.18.0",
        "rollup-plugin-commonjs": "^9.1.3",
        "rollup-plugin-includepaths": "^0.2.2",
        "rollup-plugin-json": "^3.0.0",
        "rollup-plugin-jsx": "^1.0.3",
        "rollup-plugin-node-resolve": "^3.3.0",
        "rollup-plugin-replace": "^2.0.0",
        "rollup-plugin-typescript2": "^0.15.1",
        "rollup-plugin-uglify": "^3.0.0",
        "typescript": "^2.9.2",
        "webpack-visualizer-plugin": "^0.1.11"
    },
    "scripts": {
        "lint": "npm run tslint && npm run srclint && npm run demolint && npm run stylelint && npm run applint",
        "srclint": "eslint site scripts --ext '.js,.jsx'",
        "tslint": "antd-tools run ts-lint && npm run compile && rm -rf lib",
        "tslint-fix": "antd-tools run ts-lint-fix && npm run compile && rm -rf lib",
        "demolint": "cross-env RUN_ENV=DEMO eslint components/*/demo/*.md --ext '.md'",
        "stylelint": "stylelint \"{site,components}/**/*.less\" --syntax less",
        "stylelint-fix": "stylelint \"{site,components}/**/*.less\" --syntax less --fix",
        "eslint-fix": "eslint --fix site scripts ./*.js --ext '.js,.jsx' && eslint-tinker ./components/*/demo/*.md",
        "applint": "eslint rn-kitchen-sink --ext '.js'",
        "pre-publish": "npm run test:all && node ./scripts/build-less-entry",
        "prepublishOnly": "antd-tools run guard",
        "test": "npm run test:rn && npm run test:web",
        "test:rn": "jest --config .jest.native.js",
        "test:web": "jest --config .jest.js",
        "test:all": "./scripts/test-all.sh",
        "authors": "git log --format='%aN <%aE>' | sort -u | grep -v 'users.noreply.github.com' > AUTHORS.txt",
        "dist": "cross-env BABEL_ENV=dist antd-tools run dist",
        "compile": "cross-env BABEL_ENV=dist antd-tools run compile",
        "watch-tsc": "antd-tools run watch-tsc",
        "clean": "antd-tools run clean",
        "start": "cross-env NODE_ENV=development concurrently \"cross-env DEMO_ENV=react bisheng start -c ./site/bisheng.desktop.config.js\" \"cross-env DEMO_ENV=preact bisheng start -c ./site/bisheng.kitchen.config.js\"",
        "start-hd": "cross-env NODE_ENV=development concurrently \"cross-env DEMO_ENV=react bisheng start -c ./site/bisheng.desktop.config.js\" \"cross-env DEMO_ENV=preact HD_ENV=hd bisheng start -c ./site/bisheng.kitchen.config.js\"",
        "start-prod": "cross-env NODE_ENV=production concurrently \"cross-env DEMO_ENV=react bisheng start -c ./site/bisheng.desktop.config.js\" \"cross-env DEMO_ENV=preact bisheng start -c ./site/bisheng.kitchen.config.js\"",
        "site": "cross-env NODE_ENV=production concurrently \"cross-env DEMO_ENV=react bisheng build -c ./site/bisheng.desktop.config.js\" \"cross-env DEMO_ENV=preact bisheng build -c ./site/bisheng.kitchen.config.js\" && node scripts/copy-app-res",
        "site-cdn": "cdn-tools run -c ./scripts/cdn-config.js",
        "analysis": "npm run dist && node ./scripts/analysis",
        "deploy": "npm run clean && npm run site && bisheng gh-pages --push-only",
        "pub": "cross-env BABEL_ENV=dist antd-tools run pub",
        "rn-start": "node node_modules/react-native/local-cli/cli.js start",
        "ios": "concurrently \"npm run watch-tsc\" \"npm run _ios\"",
        "android": "concurrently \"npm run watch-tsc\" \"npm run _android\"",
        "_ios": "node node_modules/react-native/local-cli/cli.js run-ios --project-path rn-kitchen-sink/ios",
        "_android": "node node_modules/react-native/local-cli/cli.js run-android --root rn-kitchen-sink",
        "build-rn-ios": "node scripts/rn-mkdir && node node_modules/react-native/local-cli/cli.js bundle --platform ios --dev false --entry-file rn-kitchen-sink/index.ios.js --bundle-output rn-kitchen-sink/ios/bundle/index.ios.bundle --assets-dest rn-kitchen-sink/ios/bundle",
        "build-rn-android": "node scripts/rn-mkdir && node node_modules/react-native/local-cli/cli.js bundle --platform android --dev false --entry-file rn-kitchen-sink/index.android.js --bundle-output rn-kitchen-sink/android/bundle/index.android.bundle --assets-dest rn-kitchen-sink/android/bundle",
        "build-rn": "npm run tsc  && npm run build-rn-ios && npm run build-rn-android",
        "lint-staged": "lint-staged",
        "lint-staged:ts": "npm run tsc && node node_modules/tslint/bin/tslint -c node_modules/antd-tools/lib/tslint.json components/**/*.tsx",
        "lint-staged:es": "eslint ./.eslintrc.js ./webpack.config.js",
        "lint-staged:demo": "cross-env RUN_ENV=DEMO eslint --ext '.md'",
        "tsc": "antd-tools run tsc",
        "build": "rollup -c rollup.config.js --environment NODE_ENV:production"
    },
    "lint-staged": {
        "components/**/*.tsx": [
            "npm run lint-staged:ts"
        ],
        "{tests,site,scripts,components}/**/*.{js,jsx}": [
            "npm run lint-staged:es"
        ],
        "{site,components}/**/*.less": "stylelint --syntax less",
        "components/*/demo/*.md": [
            "npm run lint-staged:demo"
        ]
    },
    "config": {
        "port": 8001
    },
    "typings": "lib/index.d.ts",
    "pre-commit": [
        "lint-staged"
    ]
}
