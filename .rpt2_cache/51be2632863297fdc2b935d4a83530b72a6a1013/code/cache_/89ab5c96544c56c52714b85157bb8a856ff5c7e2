{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nexport default class Badge extends React.Component {\r\n    render() {\r\n        // tslint:disable:prefer-const\r\n        let _a = this.props, { className, prefixCls, children, text, size, overflowCount, dot, corner, hot } = _a, restProps = tslib_1.__rest(_a, [\"className\", \"prefixCls\", \"children\", \"text\", \"size\", \"overflowCount\", \"dot\", \"corner\", \"hot\"]);\r\n        overflowCount = overflowCount;\r\n        text =\r\n            typeof text === 'number' && text > overflowCount\r\n                ? `${overflowCount}+`\r\n                : text;\r\n        // dot mode don't need text\r\n        if (dot) {\r\n            text = '';\r\n        }\r\n        const scrollNumberCls = classnames({\r\n            [`${prefixCls}-dot`]: dot,\r\n            [`${prefixCls}-dot-large`]: dot && size === 'large',\r\n            [`${prefixCls}-text`]: !dot && !corner,\r\n            [`${prefixCls}-corner`]: corner,\r\n            [`${prefixCls}-corner-large`]: corner && size === 'large',\r\n        });\r\n        const badgeCls = classnames(prefixCls, className, {\r\n            [`${prefixCls}-not-a-wrapper`]: !children,\r\n            [`${prefixCls}-corner-wrapper`]: corner,\r\n            [`${prefixCls}-hot`]: !!hot,\r\n            [`${prefixCls}-corner-wrapper-large`]: corner && size === 'large',\r\n        });\r\n        return (<span className={badgeCls}>\n        {children}\n        {(text || dot) && (\r\n        // tslint:disable-next-line:jsx-no-multiline-js\r\n        <sup className={scrollNumberCls} {...restProps}>\n            {text}\n          </sup>)}\n      </span>);\r\n    }\r\n}\r\nBadge.defaultProps = {\r\n    prefixCls: 'am-badge',\r\n    size: 'small',\r\n    overflowCount: 99,\r\n    dot: false,\r\n    corner: false,\r\n};\r\n"}
