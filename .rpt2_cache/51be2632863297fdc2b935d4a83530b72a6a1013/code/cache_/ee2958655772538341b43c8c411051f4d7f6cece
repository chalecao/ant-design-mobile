{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nimport Icon from '../icon';\r\nimport Marquee from './Marquee';\r\nexport default class NoticeBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            const { mode, onClick } = this.props;\r\n            if (onClick) {\r\n                onClick();\r\n            }\r\n            if (mode === 'closable') {\r\n                this.setState({\r\n                    show: false,\r\n                });\r\n            }\r\n        };\r\n        this.state = {\r\n            show: true,\r\n        };\r\n    }\r\n    render() {\r\n        const _a = this.props, { mode, icon, onClick, children, className, prefixCls, action, marqueeProps } = _a, restProps = tslib_1.__rest(_a, [\"mode\", \"icon\", \"onClick\", \"children\", \"className\", \"prefixCls\", \"action\", \"marqueeProps\"]);\r\n        const extraProps = {};\r\n        let operationDom = null;\r\n        if (mode === 'closable') {\r\n            operationDom = (<div className={`${prefixCls}-operation`} onClick={this.onClick} role=\"button\" aria-label=\"close\">\n          {action ? action : <Icon type=\"cross\" size=\"md\"/>}\n        </div>);\r\n        }\r\n        else {\r\n            if (mode === 'link') {\r\n                operationDom = (<div className={`${prefixCls}-operation`} role=\"button\" aria-label=\"go to detail\">\n            {action ? action : <Icon type=\"right\" size=\"md\"/>}\n          </div>);\r\n            }\r\n            extraProps.onClick = onClick;\r\n        }\r\n        const wrapCls = classnames(prefixCls, className);\r\n        return this.state.show ? (<div className={wrapCls} {...restProps} {...extraProps} role=\"alert\">\n        {icon && (\r\n        // tslint:disable-next-line:jsx-no-multiline-js\r\n        <div className={`${prefixCls}-icon`} aria-hidden=\"true\">\n            {icon}\n          </div>)}\n        <div className={`${prefixCls}-content`}>\n          <Marquee prefixCls={prefixCls} text={children} {...marqueeProps}/>\n        </div>\n        {operationDom}\n      </div>) : null;\r\n    }\r\n}\r\nNoticeBar.defaultProps = {\r\n    prefixCls: 'am-notice-bar',\r\n    mode: '',\r\n    icon: <Icon type=\"voice\" size=\"xxs\"/>,\r\n    onClick() { },\r\n};\r\n"}
