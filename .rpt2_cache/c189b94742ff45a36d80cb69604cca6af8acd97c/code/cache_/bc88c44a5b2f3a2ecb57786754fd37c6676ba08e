{"code":"/* tslint:disable:jsx-no-multiline-js */\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nexport default class ActivityIndicator extends React.Component {\r\n    render() {\r\n        const { prefixCls, className, animating, toast, size, text } = this.props;\r\n        const wrapClass = classnames(prefixCls, className, {\r\n            [`${prefixCls}-lg`]: size === 'large',\r\n            [`${prefixCls}-sm`]: size === 'small',\r\n            [`${prefixCls}-toast`]: !!toast,\r\n        });\r\n        const spinnerClass = classnames(`${prefixCls}-spinner`, {\r\n            [`${prefixCls}-spinner-lg`]: !!toast || size === 'large',\r\n        });\r\n        if (animating) {\r\n            if (toast) {\r\n                return (React.createElement(\"div\", { className: wrapClass }, text ? (React.createElement(\"div\", { className: `${prefixCls}-content` },\r\n                    React.createElement(\"span\", { className: spinnerClass, \"aria-hidden\": \"true\" }),\r\n                    React.createElement(\"span\", { className: `${prefixCls}-toast` }, text))) : (React.createElement(\"div\", { className: `${prefixCls}-content` },\r\n                    React.createElement(\"span\", { className: spinnerClass, \"aria-label\": \"Loading\" })))));\r\n            }\r\n            else {\r\n                return text ? (React.createElement(\"div\", { className: wrapClass },\r\n                    React.createElement(\"span\", { className: spinnerClass, \"aria-hidden\": \"true\" }),\r\n                    React.createElement(\"span\", { className: `${prefixCls}-tip` }, text))) : (React.createElement(\"div\", { className: wrapClass },\r\n                    React.createElement(\"span\", { className: spinnerClass, \"aria-label\": \"loading\" })));\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nActivityIndicator.defaultProps = {\r\n    prefixCls: 'am-activity-indicator',\r\n    animating: true,\r\n    size: 'small',\r\n    panelColor: 'rgba(34,34,34,0.6)',\r\n    toast: false,\r\n};\r\n"}
