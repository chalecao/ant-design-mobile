{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nexport default class Switch extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onChange = (e) => {\r\n            const checked = e.target.checked;\r\n            if (this.props.onChange) {\r\n                this.props.onChange(checked);\r\n            }\r\n        };\r\n        this.onClick = (e) => {\r\n            if (this.props.onClick) {\r\n                let val;\r\n                // tslint:disable-next-line:prefer-conditional-expression\r\n                if (e && e.target && e.target.checked !== undefined) {\r\n                    val = e.target.checked;\r\n                }\r\n                else {\r\n                    val = this.props.checked;\r\n                }\r\n                this.props.onClick(val);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const _a = this.props, { prefixCls, name, checked, disabled, className, platform, color } = _a, restProps = tslib_1.__rest(_a, [\"prefixCls\", \"name\", \"checked\", \"disabled\", \"className\", \"platform\", \"color\"]);\r\n        const wrapCls = classnames(prefixCls, className, {\r\n            [`${prefixCls}-android`]: platform === 'android',\r\n        });\r\n        const fackInputCls = classnames('checkbox', {\r\n            [`checkbox-disabled`]: disabled,\r\n        });\r\n        const globalProps = Object.keys(restProps).reduce((prev, key) => {\r\n            if (key.substr(0, 5) === 'aria-' ||\r\n                key.substr(0, 5) === 'data-' ||\r\n                key === 'role') {\r\n                prev[key] = restProps[key];\r\n            }\r\n            return prev;\r\n        }, {});\r\n        const style = this.props.style || {};\r\n        if (color && checked) {\r\n            style.backgroundColor = color;\r\n        }\r\n        return (React.createElement(\"label\", { className: wrapCls },\r\n            React.createElement(\"input\", Object.assign({ type: \"checkbox\", name: name, className: `${prefixCls}-checkbox`, disabled: disabled, checked: checked, onChange: this.onChange, value: checked ? 'on' : 'off' }, (!disabled ? { onClick: this.onClick } : {}), globalProps)),\r\n            React.createElement(\"div\", Object.assign({ className: fackInputCls, style: style }, (disabled ? { onClick: this.onClick } : {})))));\r\n    }\r\n}\r\nSwitch.defaultProps = {\r\n    prefixCls: 'am-switch',\r\n    name: '',\r\n    checked: false,\r\n    disabled: false,\r\n    onChange() { },\r\n    platform: 'ios',\r\n    onClick() { },\r\n};\r\n"}
