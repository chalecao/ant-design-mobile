{"code":"import classnames from 'classnames';\r\nimport React from 'react';\r\nimport TouchFeedback from 'rmc-feedback';\r\nimport getDataAttr from '../_util/getDataAttr';\r\nimport Icon from '../icon';\r\nexport default class Tag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            const { disabled, onChange } = this.props;\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            const isSelect = this.state.selected;\r\n            this.setState({\r\n                selected: !isSelect,\r\n            }, () => {\r\n                if (onChange) {\r\n                    onChange(!isSelect);\r\n                }\r\n            });\r\n        };\r\n        this.onTagClose = () => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose();\r\n            }\r\n            this.setState({\r\n                closed: true,\r\n            }, this.props.afterClose);\r\n        };\r\n        this.state = {\r\n            selected: props.selected,\r\n            closed: false,\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.selected !== nextProps.selected) {\r\n            this.setState({\r\n                selected: nextProps.selected,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { children, className, prefixCls, disabled, closable, small, style, } = this.props;\r\n        const wrapCls = classnames(className, prefixCls, {\r\n            [`${prefixCls}-normal`]: !disabled && (!this.state.selected || small || closable),\r\n            [`${prefixCls}-small`]: small,\r\n            [`${prefixCls}-active`]: this.state.selected && !disabled && !small && !closable,\r\n            [`${prefixCls}-disabled`]: disabled,\r\n            [`${prefixCls}-closable`]: closable,\r\n        });\r\n        const closableDom = closable && !disabled && !small ? (React.createElement(TouchFeedback, { activeClassName: `${prefixCls}-close-active` },\r\n            React.createElement(\"div\", { className: `${prefixCls}-close`, role: \"button\", onClick: this.onTagClose, \"aria-label\": \"remove tag\" },\r\n                React.createElement(Icon, { type: \"cross-circle\", size: \"xs\", \"aria-hidden\": \"true\" })))) : null;\r\n        return !this.state.closed ? (React.createElement(\"div\", Object.assign({}, getDataAttr(this.props), { className: wrapCls, onClick: this.onClick, style: style }),\r\n            React.createElement(\"div\", { className: `${prefixCls}-text` }, children),\r\n            closableDom)) : null;\r\n    }\r\n}\r\nTag.defaultProps = {\r\n    prefixCls: 'am-tag',\r\n    disabled: false,\r\n    selected: false,\r\n    closable: false,\r\n    small: false,\r\n    onChange() { },\r\n    onClose() { },\r\n    afterClose() { },\r\n};\r\n"}
