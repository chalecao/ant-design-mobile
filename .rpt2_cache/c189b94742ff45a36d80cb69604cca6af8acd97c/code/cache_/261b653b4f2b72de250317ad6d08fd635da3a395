{"code":"/*\r\n * https://github.com/jasonslyvia/react-marquee\r\n * remove PC\r\n * support React Element for text prop\r\n*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nexport default class Marquee extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            animatedWidth: 0,\r\n            overflowWidth: 0,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this._measureText();\r\n        this._startAnimation();\r\n    }\r\n    componentDidUpdate() {\r\n        this._measureText();\r\n        if (!this._marqueeTimer) {\r\n            this._startAnimation();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        clearTimeout(this._marqueeTimer);\r\n    }\r\n    render() {\r\n        const { prefixCls, className, text } = this.props;\r\n        const style = Object.assign({ position: 'relative', right: this.state.animatedWidth, whiteSpace: 'nowrap', display: 'inline-block' }, this.props.style);\r\n        return (React.createElement(\"div\", { className: `${prefixCls}-marquee-wrap ${className}`, style: { overflow: 'hidden' }, role: \"marquee\" },\r\n            React.createElement(\"div\", { ref: el => (this.textRef = el), className: `${prefixCls}-marquee`, style: style }, text)));\r\n    }\r\n    _startAnimation() {\r\n        if (this._marqueeTimer) {\r\n            clearTimeout(this._marqueeTimer);\r\n        }\r\n        const fps = this.props.fps;\r\n        const TIMEOUT = 1 / fps * 1000;\r\n        const isLeading = this.state.animatedWidth === 0;\r\n        const timeout = isLeading ? this.props.leading : TIMEOUT;\r\n        const animate = () => {\r\n            const { overflowWidth } = this.state;\r\n            let animatedWidth = this.state.animatedWidth + 1;\r\n            const isRoundOver = animatedWidth > overflowWidth;\r\n            if (isRoundOver) {\r\n                if (this.props.loop) {\r\n                    animatedWidth = 0;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            if (isRoundOver && this.props.trailing) {\r\n                this._marqueeTimer = setTimeout(() => {\r\n                    this.setState({\r\n                        animatedWidth,\r\n                    });\r\n                    this._marqueeTimer = setTimeout(animate, TIMEOUT);\r\n                }, this.props.trailing);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    animatedWidth,\r\n                });\r\n                this._marqueeTimer = setTimeout(animate, TIMEOUT);\r\n            }\r\n        };\r\n        if (this.state.overflowWidth !== 0) {\r\n            this._marqueeTimer = setTimeout(animate, timeout);\r\n        }\r\n    }\r\n    _measureText() {\r\n        const container = ReactDOM.findDOMNode(this);\r\n        const node = this.textRef;\r\n        if (container && node) {\r\n            const containerWidth = container.offsetWidth;\r\n            const textWidth = node.offsetWidth;\r\n            const overflowWidth = textWidth - containerWidth;\r\n            if (overflowWidth !== this.state.overflowWidth) {\r\n                this.setState({\r\n                    overflowWidth,\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nMarquee.defaultProps = {\r\n    text: '',\r\n    loop: false,\r\n    leading: 500,\r\n    trailing: 800,\r\n    fps: 40,\r\n    className: '',\r\n};\r\n"}
