{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nimport TouchFeedback from 'rmc-feedback';\r\nexport default class Item extends React.Component {\r\n    render() {\r\n        const _a = this.props, { children, className, prefixCls, icon, disabled, firstItem, activeStyle } = _a, restProps = tslib_1.__rest(_a, [\"children\", \"className\", \"prefixCls\", \"icon\", \"disabled\", \"firstItem\", \"activeStyle\"]);\r\n        const cls = classnames(`${prefixCls}-item`, className, {\r\n            [`${prefixCls}-item-disabled`]: disabled,\r\n        });\r\n        let activeClass = `${prefixCls}-item-active `;\r\n        if (firstItem) {\r\n            activeClass += `${prefixCls}-item-fix-active-arrow`;\r\n        }\r\n        return (React.createElement(TouchFeedback, { disabled: disabled, activeClassName: activeClass, activeStyle: activeStyle },\r\n            React.createElement(\"div\", Object.assign({ className: cls }, restProps),\r\n                React.createElement(\"div\", { className: `${prefixCls}-item-container` },\r\n                    icon ? (\r\n                    // tslint:disable-next-line:jsx-no-multiline-js\r\n                    React.createElement(\"span\", { className: `${prefixCls}-item-icon`, \"aria-hidden\": \"true\" }, icon)) : null,\r\n                    React.createElement(\"span\", { className: `${prefixCls}-item-content` }, children)))));\r\n    }\r\n}\r\nItem.defaultProps = {\r\n    prefixCls: 'am-popover',\r\n    disabled: false,\r\n};\r\nItem.myName = 'PopoverItem';\r\n"}
