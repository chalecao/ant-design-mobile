{"code":"import classnames from 'classnames';\r\nimport React from 'react';\r\nimport Notification from 'rmc-notification';\r\nimport Icon from '../icon';\r\nlet messageInstance;\r\nconst prefixCls = 'am-toast';\r\nfunction getMessageInstance(mask, callback) {\r\n    if (messageInstance) {\r\n        messageInstance.destroy();\r\n        messageInstance = null;\r\n    }\r\n    Notification.newInstance({\r\n        prefixCls,\r\n        style: {},\r\n        transitionName: 'am-fade',\r\n        className: classnames({\r\n            [`${prefixCls}-mask`]: mask,\r\n            [`${prefixCls}-nomask`]: !mask,\r\n        }),\r\n    }, (notification) => callback && callback(notification));\r\n}\r\nfunction notice(content, type, duration = 3, onClose, mask = true) {\r\n    const iconTypes = {\r\n        info: '',\r\n        success: 'success',\r\n        fail: 'fail',\r\n        offline: 'dislike',\r\n        loading: 'loading',\r\n    };\r\n    const iconType = iconTypes[type];\r\n    getMessageInstance(mask, notification => {\r\n        messageInstance = notification;\r\n        notification.notice({\r\n            duration,\r\n            style: {},\r\n            content: !!iconType ? (<div className={`${prefixCls}-text ${prefixCls}-text-icon`} role=\"alert\" aria-live=\"assertive\">\n          <Icon type={iconType} size=\"lg\"/>\n          <div className={`${prefixCls}-text-info`}>{content}</div>\n        </div>) : (<div className={`${prefixCls}-text`} role=\"alert\" aria-live=\"assertive\">\n          <div>{content}</div>\n        </div>),\r\n            closable: true,\r\n            onClose() {\r\n                if (onClose) {\r\n                    onClose();\r\n                }\r\n                notification.destroy();\r\n                notification = null;\r\n                messageInstance = null;\r\n            },\r\n        });\r\n    });\r\n}\r\nexport default {\r\n    SHORT: 3,\r\n    LONG: 8,\r\n    show(content, duration, mask) {\r\n        return notice(content, 'info', duration, () => { }, mask);\r\n    },\r\n    info(content, duration, onClose, mask) {\r\n        return notice(content, 'info', duration, onClose, mask);\r\n    },\r\n    success(content, duration, onClose, mask) {\r\n        return notice(content, 'success', duration, onClose, mask);\r\n    },\r\n    fail(content, duration, onClose, mask) {\r\n        return notice(content, 'fail', duration, onClose, mask);\r\n    },\r\n    offline(content, duration, onClose, mask) {\r\n        return notice(content, 'offline', duration, onClose, mask);\r\n    },\r\n    loading(content, duration, onClose, mask) {\r\n        return notice(content, 'loading', duration, onClose, mask);\r\n    },\r\n    hide() {\r\n        if (messageInstance) {\r\n            messageInstance.destroy();\r\n            messageInstance = null;\r\n        }\r\n    },\r\n};\r\n"}
