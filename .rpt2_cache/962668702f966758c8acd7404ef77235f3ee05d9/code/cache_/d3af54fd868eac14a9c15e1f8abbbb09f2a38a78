{"code":"import classnames from 'classnames';\r\nimport React from 'react';\r\nexport default class Progress extends React.Component {\r\n    componentWillReceiveProps() {\r\n        this.noAppearTransition = true;\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.appearTransition) {\r\n            setTimeout(() => {\r\n                if (this.barRef) {\r\n                    this.barRef.style.width = `${this.props.percent}%`;\r\n                }\r\n            }, 10);\r\n        }\r\n    }\r\n    render() {\r\n        const { className, prefixCls, position, unfilled, style = {}, barStyle = {}, } = this.props;\r\n        const percentStyle = {\r\n            width: this.noAppearTransition || !this.props.appearTransition\r\n                ? `${this.props.percent}%`\r\n                : 0,\r\n            height: 0,\r\n        };\r\n        const wrapCls = classnames(`${prefixCls}-outer`, className, {\r\n            [`${prefixCls}-fixed-outer`]: position === 'fixed',\r\n            [`${prefixCls}-hide-outer`]: !unfilled,\r\n        });\r\n        return (<div style={style} className={wrapCls} role=\"progressbar\" aria-valuenow={this.props.percent} aria-valuemin={0} aria-valuemax={100}>\n        <div ref={el => (this.barRef = el)} className={`${prefixCls}-bar`} style={Object.assign({}, barStyle, percentStyle)}/>\n      </div>);\r\n    }\r\n}\r\nProgress.defaultProps = {\r\n    prefixCls: 'am-progress',\r\n    percent: 0,\r\n    position: 'fixed',\r\n    unfilled: true,\r\n    appearTransition: false,\r\n};\r\n"}
