{"code":"/* tslint:disable:jsx-no-multiline-js */\r\nimport React from 'react';\r\nimport RMCCascader from 'rmc-cascader/lib/Cascader';\r\nimport RMCMultiPicker from 'rmc-picker/lib/MultiPicker';\r\nimport RMCPicker from 'rmc-picker/lib/Picker';\r\nfunction getDefaultProps() {\r\n    return {\r\n        prefixCls: 'am-picker',\r\n        pickerPrefixCls: 'am-picker-col',\r\n        cols: 3,\r\n        cascade: true,\r\n        value: [],\r\n        onChange() { },\r\n    };\r\n}\r\nexport default class PickerView extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.getCol = () => {\r\n            const { data, pickerPrefixCls, indicatorStyle, itemStyle } = this.props;\r\n            return data.map((col, index) => {\r\n                return (<RMCPicker key={index} prefixCls={pickerPrefixCls} style={{ flex: 1 }} indicatorStyle={indicatorStyle} itemStyle={itemStyle}>\n          {col.map(item => {\r\n                    return (<RMCPicker.Item key={item.value} value={item.value}>\n                {item.label}\n              </RMCPicker.Item>);\r\n                })}\n        </RMCPicker>);\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        // tslint:disable-next-line:no-this-assignment\r\n        const { props } = this;\r\n        let picker;\r\n        if (props.cascade) {\r\n            picker = (<RMCCascader prefixCls={props.prefixCls} pickerPrefixCls={props.pickerPrefixCls} data={props.data} value={props.value} onChange={props.onChange} onScrollChange={props.onScrollChange} cols={props.cols} indicatorStyle={props.indicatorStyle} pickerItemStyle={props.itemStyle}/>);\r\n        }\r\n        else {\r\n            picker = (<RMCMultiPicker prefixCls={props.prefixCls} selectedValue={props.value} onValueChange={props.onChange} onScrollChange={props.onScrollChange} style={{ flexDirection: 'row' }}>\n          {this.getCol()}\n        </RMCMultiPicker>);\r\n        }\r\n        return picker;\r\n    }\r\n}\r\nPickerView.defaultProps = getDefaultProps();\r\n"}
