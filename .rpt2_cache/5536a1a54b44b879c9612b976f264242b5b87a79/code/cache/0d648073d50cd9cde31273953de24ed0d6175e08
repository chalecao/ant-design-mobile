{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nimport ReactCarousel from 'rmc-nuka-carousel';\r\nexport default class Carousel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = (index) => {\r\n            this.setState({\r\n                selectedIndex: index\r\n            }, () => {\r\n                if (this.props.afterChange) {\r\n                    this.props.afterChange(index);\r\n                }\r\n            });\r\n        };\r\n        this.state = {\r\n            selectedIndex: this.props.selectedIndex\r\n        };\r\n    }\r\n    render() {\r\n        const _a = this.props, { infinite, selectedIndex, beforeChange, afterChange, dots } = _a, restProps = tslib_1.__rest(_a, [\"infinite\", \"selectedIndex\", \"beforeChange\", \"afterChange\", \"dots\"]);\r\n        const { prefixCls, dotActiveStyle, dotStyle, className, vertical } = restProps;\r\n        const newProps = Object.assign({}, restProps, { wrapAround: infinite, slideIndex: selectedIndex, beforeSlide: beforeChange });\r\n        let Decorators = [];\r\n        if (dots) {\r\n            Decorators = [\r\n                {\r\n                    component: ({ slideCount, slidesToScroll, currentSlide }) => {\r\n                        const arr = [];\r\n                        for (let i = 0; i < slideCount; i += slidesToScroll) {\r\n                            arr.push(i);\r\n                        }\r\n                        const dotDom = arr.map((index) => {\r\n                            const dotCls = classnames(`${prefixCls}-wrap-dot`, {\r\n                                [`${prefixCls}-wrap-dot-active`]: index === currentSlide\r\n                            });\r\n                            const currentDotStyle = index === currentSlide ? dotActiveStyle : dotStyle;\r\n                            return (<div className={dotCls} key={index}>\n                  <span style={currentDotStyle}/>\n                </div>);\r\n                        });\r\n                        return <div className={`${prefixCls}-wrap`}>{dotDom}</div>;\r\n                    },\r\n                    position: 'BottomCenter'\r\n                }\r\n            ];\r\n        }\r\n        const wrapCls = classnames(prefixCls, className, {\r\n            [`${prefixCls}-vertical`]: vertical\r\n        });\r\n        return (<ReactCarousel {...newProps} className={wrapCls} decorators={Decorators} afterSlide={this.onChange}/>);\r\n    }\r\n}\r\nCarousel.defaultProps = {\r\n    prefixCls: 'am-carousel',\r\n    dots: true,\r\n    arrows: false,\r\n    autoplay: false,\r\n    infinite: false,\r\n    cellAlign: 'center',\r\n    selectedIndex: 0,\r\n    dotStyle: {},\r\n    dotActiveStyle: {}\r\n};\r\n"}
