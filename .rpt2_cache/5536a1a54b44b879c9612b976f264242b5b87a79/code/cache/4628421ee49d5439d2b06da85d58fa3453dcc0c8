{"code":"import * as tslib_1 from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\nimport List from '../list';\r\nimport Checkbox from './Checkbox';\r\nconst ListItem = List.Item;\r\n// tslint:disable-next-line:no-empty\r\nfunction noop() { }\r\nexport default class CheckboxItem extends React.Component {\r\n    render() {\r\n        const _a = this.props, { listPrefixCls, onChange, disabled, checkboxProps, onClick } = _a, restProps = tslib_1.__rest(_a, [\"listPrefixCls\", \"onChange\", \"disabled\", \"checkboxProps\", \"onClick\"]);\r\n        const { prefixCls, className, children } = restProps;\r\n        const wrapCls = classnames(`${prefixCls}-item`, className, {\r\n            [`${prefixCls}-item-disabled`]: disabled === true,\r\n        });\r\n        // Note: if not omit `onChange`, it will trigger twice on check listitem\r\n        if (!disabled) {\r\n            restProps.onClick = onClick || noop;\r\n        }\r\n        const extraProps = {};\r\n        ['name', 'defaultChecked', 'checked', 'onChange', 'disabled'].forEach(i => {\r\n            if (i in this.props) {\r\n                extraProps[i] = this.props[i];\r\n            }\r\n        });\r\n        return (<ListItem {...restProps} prefixCls={listPrefixCls} className={wrapCls} thumb={<Checkbox {...checkboxProps} {...extraProps}/>}>\n        {children}\n      </ListItem>);\r\n    }\r\n}\r\nCheckboxItem.defaultProps = {\r\n    prefixCls: 'am-checkbox',\r\n    listPrefixCls: 'am-list',\r\n    checkboxProps: {},\r\n};\r\n"}
